(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{301:function(t,a,s){"use strict";s.r(a);var r=s(14),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"继承与原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承与原型链"}},[t._v("#")]),t._v(" 继承与原型链")]),t._v(" "),s("p",[t._v("对于使用过基于类的语言（如 Java 或 C++）的开发者们来说，Javascript实在是有些令人困惑，Javascript是动态的，本身不提供"),s("code",[t._v("class")]),t._v("的实现。即便是在Es6中引入了"),s("code",[t._v("class")]),t._v("关键字，但那也是语法糖，Javascript仍然是基于原型的。")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("javascript")]),t._v("分为"),s("strong",[t._v("函数")]),t._v("和"),s("strong",[t._v("普通对象")]),t._v("，每个对象都有__proto__属性，但是只有函数对象才有prototype属性。")]),t._v(" "),s("li",[t._v("Object、Function都是js内置的函数，类似的还有我们常用的Array、RegExp、Date、Boolean、Number、String")])])])}),[],!1,null,null,null);a.default=e.exports}}]);